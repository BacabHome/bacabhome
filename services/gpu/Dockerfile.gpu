FROM ubuntu:18.04

MAINTAINER Abraham "xe1gyq@gmail.com"

ARG LIBDRM_VERSION=2.4.75
ARG LIBVA_VERSION=1.8.0
ARG MESA_VERSION=17.0.1
ARG WAYLAND_VERSION=1.8.93

ENV TIMEZONE America/Mexico_City
ENV DEBIAN_FRONTEND noninteractive
ENV INSTALLATION_DIRECTORY=/usr/local/
ENV INSTALLATION_DIRECTORY_MEDIA_SDK=/opt/intel/mediasdk/
ENV PKG_CONFIG_PATH=$INSTALLATION_DIRECTORY/lib/pkgconfig/:$PKG_CONFIG_PATH
ENV LIBGL_DRIVERS_PATH=$INSTALLATION_DIRECTORY/lib/dri
ENV LD_LIBRARY_PATH=$INSTALLATION_DIRECTORY/lib

USER root
WORKDIR /

RUN apt-get update && apt-get install -y \
    sudo \
    build-essential \
    wget \
    curl \
    git \
    ca-certificates \
    bzip2 \
    libgstreamer1.0-0 \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-doc \
    gstreamer1.0-tools \
    libgstreamer-plugins-base1.0-dev \
    gstreamer1.0-vaapi \
    gcc \
    pkg-config \
    libpciaccess-dev \
    dh-autoreconf \
    x11proto-gl-dev \
    x11proto-dri3-dev \
    x11proto-present-dev \
    libx11-xcb-dev \
    x11proto-dri2-dev \
    libxcb-dri3-dev  \
    libxcb-present-dev \
    libxcb-sync-dev \
    libxshmfence-dev  \
    libxcb-dri2-0-dev \
    python \
    libxcb-glx0-dev \
    libexpat1-dev \
    libxdamage-dev \
    libxfixes-dev \
    libxext-dev \
    libffi6 \
    libffi-dev \
    expat \
    libexpat1 \
    libexpat1-dev \
    mesa-utils && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /usr/local/

RUN curl https://dri.freedesktop.org/libdrm/libdrm-${LIBDRM_VERSION}.tar.gz \
      -o $INSTALLATION_DIRECTORY/libdrm-${LIBDRM_VERSION}.tar.gz && \
    tar -xvzf libdrm-${LIBDRM_VERSION}.tar.gz && \
    rm libdrm-${LIBDRM_VERSION}.tar.gz && \
    cd $INSTALLATION_DIRECTORY/libdrm-${LIBDRM_VERSION}/ && \
    ./configure CFLAGS='-O2' CXXFLAGS='-O2' --prefix=$INSTALLATION_DIRECTORY && \
    make -j8 && \
    make install && \
    make clean

RUN cd $INSTALLATION_DIRECTORY && \
    curl https://www.freedesktop.org/software/vaapi/releases/libva/libva-${LIBVA_VERSION}.tar.bz2 \
      -o $INSTALLATION_DIRECTORY/libva-${LIBVA_VERSION}.tar.bz2 && \
    bzip2 -d libva-${LIBVA_VERSION}.tar.bz2 && \
    tar -xvf libva-${LIBVA_VERSION}.tar && rm libva-${LIBVA_VERSION}.tar && \
    cd $INSTALLATION_DIRECTORY/libva-${LIBVA_VERSION} && \
    ./configure CFLAGS='-O2' CXXFLAGS='-O2' --prefix=$INSTALLATION_DIRECTORY --enable-wayland=0 && \
    make -j8 && \
    make install && \
    make clean

RUN cd $INSTALLATION_DIRECTORY && \
    curl https://www.freedesktop.org/software/vaapi/releases/libva-intel-driver/intel-vaapi-driver-${LIBVA_VERSION}.tar.bz2 \
      -o $INSTALLATION_DIRECTORY/intel-vaapi-driver-${LIBVA_VERSION}.tar.bz2 && \
    bzip2 -d intel-vaapi-driver-${LIBVA_VERSION}.tar.bz2 && \
    tar -xvf intel-vaapi-driver-${LIBVA_VERSION}.tar && \
    rm intel-vaapi-driver-${LIBVA_VERSION}.tar && \
    cd $INSTALLATION_DIRECTORY/intel-vaapi-driver-${LIBVA_VERSION} && \
    ./configure  CFLAGS='-O2' CXXFLAGS='-O2'  --prefix=$INSTALLATION_DIRECTORY --enable-wayland=0 && \
    make -j8 && \
    make install && \
    make clean

RUN cd $INSTALLATION_DIRECTORY && \
    curl https://mesa.freedesktop.org/archive/mesa-${MESA_VERSION}.tar.gz \
      -o $INSTALLATION_DIRECTORY/mesa-${MESA_VERSION}.tar.gz && \
    tar -xvzf mesa-${MESA_VERSION}.tar.gz && rm mesa-${MESA_VERSION}.tar.gz && \
    cd $INSTALLATION_DIRECTORY/mesa-${MESA_VERSION} && \
    ./autogen.sh CFLAGS='-O2' CXXFLAGS='-O2' --prefix=$INSTALLATION_DIRECTORY --with-dri-drivers="i915 i965" \
      --with-dri-driverdir=$prefix/lib/dri --enable-gles1 --enable-gles2 --enable-shared-glapi --with-gallium-drivers= \
      --with-egl-platforms=x11,drm --enable-texture-float --enable-gbm --enable-glx-tls --enable-dri3 --enable-debug && \
    make -j8 && \
    make install && \
    make clean

RUN wget --no-check-certificate https://wayland.freedesktop.org/releases/wayland-${WAYLAND_VERSION}.tar.xz && \
    tar xf wayland-${WAYLAND_VERSION}.tar.xz && \
    cd wayland-${WAYLAND_VERSION} && \
    ./configure --disable-documentation && \
    make && \
    make install && \
    make clean

RUN cd $INSTALLATION_DIRECTORY && \
    curl https://www.freedesktop.org/software/vaapi/releases/libva/libva-utils-${LIBVA_VERSION}.tar.bz2 \
      -o $INSTALLATION_DIRECTORY/libva-utils-${LIBVA_VERSION}.tar.bz2 && \
    bzip2 -d libva-utils-${LIBVA_VERSION}.tar.bz2 && \
    tar -xvf libva-utils-${LIBVA_VERSION}.tar && \
    cd $INSTALLATION_DIRECTORY/libva-utils-${LIBVA_VERSION} && \
    ./autogen.sh --prefix=$INSTALLATION_DIRECTORY --enable-drm --disable-wayland && \
    make -j8 && \
    make install && \
    make clean

RUN cd $INSTALLATION_DIRECTORY && \
    wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz && \
    tar xvf cmake-3.13.4.tar.gz && \
    cd cmake-3.13.4 && \
    ./configure && \
    make && \
    make install

RUN git clone https://github.com/intel/libva.git && \
    cd libva && \
    #git checkout tags/2.1.1.pre1-20180601 && \
    ./autogen.sh && \
    make && \
    make install

RUN cd $INSTALLATION_DIRECTORY && \
    git clone https://github.com/Intel-Media-SDK/MediaSDK && \
    cd MediaSDK && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make && \
    make install

ENV MFX_HOME=/opt/intel/mediasdk/
ENV GST_PLUGIN_PATH_1_0=/usr/local/lib:$INSTALLATION_DIRECTORY_MEDIA_SDK/lib/

RUN git clone https://github.com/Intel-Media-SDK/gstreamer-plugins.git && \
    cd gstreamer-plugins && \
    sudo cp -r $INSTALLATION_DIRECTORY_MEDIA_SDK/include/mfx/mfx* $INSTALLATION_DIRECTORY_MEDIA_SDK/include/ && \
    sudo mkdir $INSTALLATION_DIRECTORY_MEDIA_SDK/lib/lin_x64/ && \
    sudo cp -r $INSTALLATION_DIRECTORY_MEDIA_SDK/lib/*.* $INSTALLATION_DIRECTORY_MEDIA_SDK/lib/lin_x64/ && \
    MFX_HOME=$MFX_HOME ./autogen.sh --libdir=${MFX_HOME}/lib/ --includedir=${MFX_HOME}/include --prefix=/usr/local/lib && \
    make && \
    make install && \
    echo /opt/intel/mediasdk/lib/ > /etc/ld.so.conf.d/media-sdk.conf && \
    ldconfig

RUN apt-get update && apt-get install -y --no-install-recommends \
    v4l-utils

RUN groupadd user && \
    useradd -g user -s /bin/bash -d /home/user -m user && \
    echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    usermod -a -G video user

USER user
WORKDIR /home/user

CMD [/bin/bash]
